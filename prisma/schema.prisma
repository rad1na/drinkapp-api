generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id                     String        @id @default(uuid())
    createdAt              DateTime      @default(now())
    updatedAt              DateTime      @updatedAt
    email                  String?
    hash                   String?
    phoneNumber            String        @unique
    isPhoneNumberConfirmed Boolean       @default(false)
    username               String?
    age                    Int?
    aboutMe                String?
    sex                    String?
    role                   Role
    favouriteDrinks        UserDrink[]
    requests               UserRequest[]
    posts                  Post[]

    @@map("users")
}

enum Role {
    basic_user
    admin
    super_admin
}

model Drink {
    id             Int         @id @default(autoincrement())
    createdAt      DateTime    @default(now())
    updatedAt      DateTime    @updatedAt
    name           String
    icon           String
    drinkType      Int
    type           DrinkType   @relation(fields: [drinkType], references: [id])
    favoredByUsers UserDrink[]
    postDrinks     Post[]

    @@map("drinks")
}

model DrinkType {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    type      String   @unique
    drinks    Drink[]

    @@map("drinkTypes")
}

model UserDrink {
    userId  String
    drinkId Int
    user    User   @relation(fields: [userId], references: [id])
    drink   Drink  @relation(fields: [drinkId], references: [id])

    @@id([userId, drinkId])
}

enum RequestTypes {
    CHAT
    LOCATION
}

enum RequestStatus {
    ACCEPTED
    DENIED
}

model Post {
    id          Int           @id @default(autoincrement())
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt
    expiresAt   DateTime
    createdBy   String
    description String?
    location    String
    requests    UserRequest[]
    user        User          @relation(fields: [createdBy], references: [id])
    drink       Drink         @relation(fields: [id], references: [id])

    @@map("posts")
}

model UserRequest {
    id        Int           @id @default(autoincrement())
    post_id   Int
    type      RequestTypes
    from_user String
    status    RequestStatus @default(DENIED)
    createdAt DateTime      @default(now())
    user      User          @relation(fields: [from_user], references: [id])
    post      Post          @relation(fields: [post_id], references: [id])
}
